import { useQuery } from 'react-query';

import axiosInstance from '../../api';

export type TestimonialsListParams = {
  page: number;
  track?: string;
  exercise?: string;
  order?: 'newest_first' | 'oldest_first';
};

// Generated by https://quicktype.io

export type TestimonialsResponse = {
  testimonials: Testimonials;
};

export type Testimonials = {
  results: Result[];
  pagination: Pagination;
  tracks: string[];
  track_counts: { [key: string]: number };
};

type Pagination = {
  current_page: number;
  total_count: number;
  total_pages: number;
};

export type Result = {
  id: number;
  track: Exercise;
  exercise: Exercise;
  mentor: Mentor;
  content: string;
  created_at: string;
};

type Exercise = {
  slug: string;
  title: string;
  icon_url: string;
};

type Mentor = {
  handle: string;
  avatar_url: string;
};

async function getTestimonialsList(params: TestimonialsListParams) {
  const response = await axiosInstance.get<unknown, TestimonialsResponse>(
    'hiring/testimonials',
    { params }
  );
  return response.testimonials;
}

export function useTestimonialsList(params: TestimonialsListParams) {
  return useQuery(['testimonials-list', params], () =>
    getTestimonialsList(params)
  );
}

export default useTestimonialsList;
